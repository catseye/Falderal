import System
import System.IO
import System.Environment

import Test.Falderal.Common
import Test.Falderal.Loader
import Test.Falderal.Runner
import Test.Falderal.Formatter
import Test.Falderal.Reporter

--
-- This module contains entry points to Falderal functionality intended
-- for use by users.
--

main :: IO ()
main = do
    args <- getArgs
    dispatch args

dispatch ("format":formatName:fileName:[]) = do
    formatFile formatName fileName stdout

--
-- Requires ghc.  Requires Test.Falderal is in the package path
-- (easiest way to ensure this is to install it as a Cabal package)
-- TODO: require only runhaskell.
-- TODO: allow "runhaskell" to be overridden with a cmd line opt.
-- TODO: determine which formats need to be generated by
--       looking at the loaded tests
--

dispatch ("test":reportFormat:fileName:[]) = do
    outputFileHandle <- openFile "GeneratedFalderalTests.hs" WriteMode
    formatFile "haskell" fileName outputFileHandle
    hClose outputFileHandle
    exitCode <- system "ghc GeneratedFalderalTests.hs -e testModule"
    system "rm -f GeneratedFalderalTests.hs"
    exitWith exitCode

dispatch _ = do
    putStrLn "Usage: falderal command {args}"
    putStrLn "where command is one of:"
    putStrLn "    format format-name input-falderal-filename"
    putStrLn "    test report-style input-falderal-filename"
