Falderal
========

Falderal is a framework for writing, running, and formatting "doctest"-like
literate test suites for Haskell functions.  It is particularly suited for
testing and documenting functions which interpret or compile programming
languages -- especially esoteric ones.

Here's the situation:

* You have a Haskell program, formatted in literate Haskell.
* You have some Haskell functions which take Strings to Strings.
* You have some unit tests for those functions that you want to present in
  a nicely readable fashion, possibly included right in the literate Haskell
  source.

If this describes you, then Falderal might help.  The particular need I had
that encouraged me to write it is having implemented several esoteric
programming languages in Haskell, and wanting to write nicely formatted
tests suites for them.

Current Version
---------------

The current version of Falderal is 0.1.  The API should not be expected to
be stable through the 0.x series, however Test.Falderal.Runner.run is not
expected to change its type signature (it takes a "property list" of options,
although no options are currently honoured.)

Development
-----------

Falderal development is hosted on BitBucket:

    https://bitbucket.org/catseye/falderal/

Bugs may be reported (and features requested) on the Issue Tracker:

    https://bitbucket.org/catseye/falderal/issues

Official release distfiles may at some point be available through Falderal's
project page on Cat's Eye Technologies' website:

    http://catseye.tc/project/falderal/

For Further Information
-----------------------

Please see the Falderal wiki on BitBucket:

    https://bitbucket.org/catseye/falderal/wiki/
